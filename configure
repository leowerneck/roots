#!/bin/env python3

from shutil import which
from argparse import ArgumentParser
from subprocess import run

parser = ArgumentParser(
    prog="./configure",
    description="Configuration script for the Roots library.")

parser.add_argument("--meson" , default="meson", help="path to meson executable")
parser.add_argument("--ninja" , default="ninja", help="path to ninja executable")
parser.add_argument("--prefix", default=None   , help="installation directory")
args = parser.parse_args()

def check_command_exists(cmd):
    if which(cmd) is None:
        raise Exception(f"{cmd} not found. "
                        "Please install it or use ./configure -h for help.")

check_command_exists(args.meson)
check_command_exists(args.ninja)

if args.prefix is None:
    run([args.meson, "setup", "build"])
else:
    run([args.meson, "setup", "build", f"--prefix={args.prefix}"])

print("Creating Makefile...", end="")
with open("Makefile", "w") as f:
    f.write(f""".PHONY: roots test
prefix={args.prefix}

all: roots

roots:
\t{args.meson} compile -vC build

test:
\t{args.meson} test -C build

test-verbose:
\t{args.meson} test -vC build

install: roots
\t{args.meson} install -C build

clean:
\t@echo "Cleaning object files"
\t@rm -f `find build | grep -E "\.[s]?o$$"`

realclean:
\t@echo "Removing build and Makefile. Run configure again before building."
\t@rm -rf build lib include
\t@rm -f Makefile

uninstall:
\t@echo "Removing header files from $(prefix)/include"
\t@rm -f `find $(prefix)/include | grep roots.h`
\t@echo "Removing library files from $(prefix)/lib"
\t@rm -f `find $(prefix)/lib | grep libroots`
\t@echo "All done"
""")

print(" done.")
